{"version":3,"sources":["webpack:///./node_modules/@vue/devtools-api/lib/esm/index.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/env.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/const.js","webpack:///(webpack)/buildin/global.js"],"names":["setupDevtoolsPlugin","pluginDescriptor","setupFn","hook","emit","target","list","__VUE_DEVTOOLS_PLUGINS__","push","hasSymbol","Symbol","toStringTag","PolySymbol","name","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","window","isESModule","obj","__esModule","assign","Object","applyToParams","fn","params","newParams","key","value","Array","isArray","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","path","replace","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","indexOf","hashPos","slice","length","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","toLowerCase","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","keys","isSameRouteLocationParamsValue","isEquivalentArray","every","i","to","from","startsWith","fromSegments","split","toSegments","toPosition","segment","position","join","NavigationType","NavigationDirection","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","protocol","host","createCurrentLocation","search","slicePos","includes","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","forEach","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","callback","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","err","console","error","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","defineProperty","enumerable","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","undefined","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","Error","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","stringify","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","test","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","Set","updateGuards","enterCallbacks","default","component","propsObject","reduce","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","prototype","hasOwnProperty","currentValue","values","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","guardToPromiseFn","guard","enterCallbackArray","Promise","reject","next","valid","guardReturn","call","guardCall","then","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","href","RouterLinkImpl","String","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","slots","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","attrs","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","size","flush","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","slot","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","app","this","config","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","promise","len","Math","max","recordFrom","recordTo","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","method","args","arr","toRaw","l","apply","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","val","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","toRef","object","ComputedRefImpl","getter","_setter","_dirty","self","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","nextTick","p","findInsertionIndex","job","jobId","getId","middle","middleJobId","queueJob","pos","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","event","rawArgs","isModelListener","modelArg","modifiersKey","number","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","isRenderingCompiledSlot","setCompiledSlotRendering","n","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","openBlock","prevInstance","closeBlock","_c","renderComponentRoot","withProxy","propsOptions","render","renderCache","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","filterModelListeners","cloneVNode","dirs","concat","transition","blockStack","createVNode","Comment","filterSingleRoot","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","initProps","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","create","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","toString","isSameType","expectedTypes","t","injectHook","currentInstance","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","directives","internalInstance","bindings","dir","arg","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","binding","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","warnHandler","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","isSVG","__vue_app__","initFeatureFlags","defineComponent","setup","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","owner","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","scopeId","needCallTransitionHooks","onVnodeMounted","enter","parentVNode","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","arguments","shouldCacheAccess","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","configurable","createWatcher","callHookWithMixinAndExtends","selfHook","createPathGetter","resolveMergedOptions","__merged","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","displayName","h","propsOrChildren","renderList","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","selector","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","display","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","skipTimestampCheck","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","getModelAssigner","vModelSelect","isSetModel","selectedVal","selected","getValue","_assign","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","SVGElement","Element","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","JSON","replacer","isMap","entries","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","def","toNumber","parseFloat","isNaN","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","global","HOOK_SETUP","g","module","exports"],"mappings":"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","file":"js/chunk-vendors.4a3f8767.js","sourcesContent":["import { getTarget, getDevtoolsGlobalHook } from './env';\nimport { HOOK_SETUP } from './const';\nexport * from './api';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n","/*!\n  * vue-router v4.0.8\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, watchEffect, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        // this ignores ?__proto__&toString\r\n        if (Object.prototype.hasOwnProperty(key)) {\r\n            continue;\r\n        }\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch(console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        // devtools only\r\n        if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n            const instance = getCurrentInstance();\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_route = link.route;\r\n            }, { flush: 'post' });\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_active = link.isActive;\r\n                instance.__vrl_exactActive = link.isExactActive;\r\n            }, { flush: 'post' });\r\n        }\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://next.router.vuejs.org/',\r\n        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (node.name === 'RouterLink') {\r\n                if (componentInstance.__vrl_route) {\r\n                    node.tags.push({\r\n                        label: componentInstance.__vrl_route.path,\r\n                        textColor: 0,\r\n                        backgroundColor: ORANGE_400,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_exactActive) {\r\n                    node.tags.push({\r\n                        label: 'exact',\r\n                        textColor: 0,\r\n                        backgroundColor: LIME_500,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_active) {\r\n                    node.tags.push({\r\n                        label: 'active',\r\n                        textColor: 0,\r\n                        backgroundColor: BLUE_600,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error',\r\n                    subtitle: 'An uncaught error happened during navigation',\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst shallowReadonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    // mark this as a compiled slot function.\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue(props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        // means unmount\r\n        value = null;\r\n    }\r\n    else if (isAsyncWrapper(vnode)) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    else if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        value = vnode.component.exposed || vnode.component.proxy;\r\n    }\r\n    else {\r\n        value = vnode.el;\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense, null);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    unmount(children[i], parentComponent, parentSuspense, true, optimized);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        shouldCacheAccess = false;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        shouldCacheAccess = true;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    for (let i = 0; i < globalMixins.length; i++) {\r\n        callHookWithMixinAndExtends(name, type, globalMixins[i], instance);\r\n    }\r\n    callHookWithMixinAndExtends(name, type, options, instance);\r\n}\r\nfunction callHookWithMixinAndExtends(name, type, options, instance) {\r\n    const { extends: base, mixins } = options;\r\n    const selfHook = options[name];\r\n    if (base) {\r\n        callHookWithMixinAndExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        for (let i = 0; i < mixins.length; i++) {\r\n            callHookWithMixinAndExtends(name, type, mixins[i], instance);\r\n        }\r\n    }\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    shouldCacheAccess = false;\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    shouldCacheAccess = true;\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.11\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n","export const HOOK_SETUP = 'devtools-plugin:setup';\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}